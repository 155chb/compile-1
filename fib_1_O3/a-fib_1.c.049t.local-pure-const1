
;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)



 local analysis of printf/15
   scanning: _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  scanning: return _4;
Function is locally looping.
Function can locally free.
__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> [local count: 1073741824]:
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function fib (fib, funcdef_no=40, decl_uid=3180, cgraph_uid=41, symbol_order=40)



 local analysis of fib/40
   scanning: if (n_7 <= 2)
  scanning: // predicted unlikely by early return (on trees) predictor.
  scanning: acc_tmp_15 = add_acc_13 + 1;
  scanning: return acc_tmp_15;
  scanning: _1 = n_7 + -1;
  scanning: _2 = fib (_1);
    Recursive call can loop.
  scanning: _3 = n_7 + -2;
  scanning: add_acc_14 = add_acc_13 + _2;
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 5 2 3 4
;;
;; Loop 1
;;  header 2, latch 4
;;  depth 1, outer 0
;;  nodes: 2 4
;; 5 succs { 2 }
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 2 }
Function is locally looping.
Function is locally const.
Function found to be looping const: fib
Declaration updated to be looping const: fib
int fib (int n)
{
  int result;
  int _1;
  int _2;
  int _3;
  int add_acc_13;
  int add_acc_14;
  int acc_tmp_15;

  <bb 2> [local count: 236223200]:

  <bb 3> [local count: 1073741824]:
  # n_7 = PHI <n_8(D)(2), _3(5)>
  # add_acc_13 = PHI <0(2), add_acc_14(5)>
  if (n_7 <= 2)
    goto <bb 4>; [22.00%]
  else
    goto <bb 5>; [78.00%]

  <bb 4> [local count: 236223200]:
  // predicted unlikely by early return (on trees) predictor.
  acc_tmp_15 = add_acc_13 + 1;
  return acc_tmp_15;

  <bb 5> [local count: 212600880]:
  _1 = n_7 + -1;
  _2 = fib (_1);
  _3 = n_7 + -2;
  add_acc_14 = add_acc_13 + _2;
  goto <bb 3>; [100.00%]

}



;; Function main (main, funcdef_no=39, decl_uid=3181, cgraph_uid=40, symbol_order=39) (executed once)



 local analysis of main/39
   scanning: n = 0;
  scanning: scanf ("%d", &n);
  scanning: n.0_1 = n;
  scanning: if (n_11 <= 2)
  scanning: acc_tmp_13 = add_acc_18 + 1;
  scanning: __printf_chk (1, "%d\n", acc_tmp_13);
  scanning: n ={v} {CLOBBER};
  scanning: return 0;
  scanning: _14 = n_11 + -1;
  scanning: _15 = fib (_14);
  scanning: _16 = n_11 + -2;
  scanning: add_acc_17 = add_acc_12 + _15;
Function is locally looping.
Function can locally free.
int main ()
{
  int D.3208;
  int n;
  int result;
  int n;
  int n.0_1;
  int add_acc_12;
  int acc_tmp_13;
  int _14;
  int _15;
  int _16;
  int add_acc_17;
  int add_acc_18;

  <bb 2> [local count: 236223200]:
  n = 0;
  scanf ("%d", &n);
  n.0_1 = n;

  <bb 3> [local count: 1073741824]:
  # n_11 = PHI <n.0_1(2), _16(5)>
  # add_acc_12 = PHI <0(2), add_acc_17(5)>
  if (n_11 <= 2)
    goto <bb 4>; [22.00%]
  else
    goto <bb 5>; [78.00%]

  <bb 4> [local count: 236223200]:
  # add_acc_18 = PHI <add_acc_12(3)>
  acc_tmp_13 = add_acc_18 + 1;
  __printf_chk (1, "%d\n", acc_tmp_13);
  n ={v} {CLOBBER};
  return 0;

  <bb 5> [local count: 837518625]:
  _14 = n_11 + -1;
  _15 = fib (_14);
  _16 = n_11 + -2;
  add_acc_17 = add_acc_12 + _15;
  goto <bb 3>; [100.00%]

}


