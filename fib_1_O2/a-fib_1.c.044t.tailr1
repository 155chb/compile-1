
;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function fib (fib, funcdef_no=40, decl_uid=3180, cgraph_uid=41, symbol_order=40)


Symbols to be put in SSA form
{ D.3200 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 6
Number of blocks to update: 5 ( 83%)


Merging blocks 3 and 5
int fib (int n)
{
  int result;
  int _1;
  int _2;
  int _3;
  int add_acc_13;
  int add_acc_14;
  int acc_tmp_15;

  <bb 2> :
  # n_7 = PHI <n_8(D)(0), _3(4)>
  # add_acc_13 = PHI <0(0), add_acc_14(4)>
  if (n_7 <= 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  acc_tmp_15 = add_acc_13 + 1;
  return acc_tmp_15;

  <bb 4> :
  _1 = n_7 + -1;
  _2 = fib (_1);
  _3 = n_7 + -2;
  add_acc_14 = add_acc_13 + _2;
  goto <bb 2>; [INV]

}



;; Function main (main, funcdef_no=39, decl_uid=3181, cgraph_uid=40, symbol_order=39)

int main ()
{
  int result;
  int n;
  int n.0_1;

  <bb 2> :
  n = 0;
  scanf ("%d", &n);
  n.0_1 = n;
  result_7 = fib (n.0_1);
  __printf_chk (1, "%d\n", result_7);
  n ={v} {CLOBBER};
  return 0;

}


