
;; Function fib (fib, funcdef_no=40, decl_uid=3180, cgraph_uid=41, symbol_order=40)

;; 10 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 30 4 5 39 6 31 7 8 40 9 32 10 11 41 12 33 13 14 42 15 34 16 17 43 18 35 19 20 44 21 36 22 23 45 24 37 25 26 46 27 38 28 47 29
;;
;; Loop 1
;;  header 4, latch 39
;;  depth 1, outer 0
;;  nodes: 4 39 5 9 8 12 7 40 31 11 15 10 41 32 14 18 13 42 33 17 21 16 43 34 20 24 19 44 35 23 27 22 45 36 26 29 25 46 37 28 47 38
;;
;; Loop 2
;;  header 7, latch 40
;;  depth 2, outer 1
;;  nodes: 7 40 8 12 11 15 10 41 32 14 18 13 42 33 17 21 16 43 34 20 24 19 44 35 23 27 22 45 36 26 29 25 46 37 28 47 38
;;
;; Loop 3
;;  header 10, latch 41
;;  depth 3, outer 2
;;  nodes: 10 41 11 15 14 18 13 42 33 17 21 16 43 34 20 24 19 44 35 23 27 22 45 36 26 29 25 46 37 28 47 38
;;
;; Loop 4
;;  header 13, latch 42
;;  depth 4, outer 3
;;  nodes: 13 42 14 18 17 21 16 43 34 20 24 19 44 35 23 27 22 45 36 26 29 25 46 37 28 47 38
;;
;; Loop 5
;;  header 16, latch 43
;;  depth 5, outer 4
;;  nodes: 16 43 17 21 20 24 19 44 35 23 27 22 45 36 26 29 25 46 37 28 47 38
;;
;; Loop 6
;;  header 19, latch 44
;;  depth 6, outer 5
;;  nodes: 19 44 20 24 23 27 22 45 36 26 29 25 46 37 28 47 38
;;
;; Loop 7
;;  header 22, latch 45
;;  depth 7, outer 6
;;  nodes: 22 45 23 27 26 29 25 46 37 28 47 38
;;
;; Loop 8
;;  header 25, latch 46
;;  depth 8, outer 7
;;  nodes: 25 46 26 29 28 47 38
;;
;; Loop 9
;;  header 28, latch 47
;;  depth 9, outer 8
;;  nodes: 28 47
;; 2 succs { 3 30 }
;; 3 succs { 1 }
;; 30 succs { 4 }
;; 4 succs { 5 31 }
;; 5 succs { 6 39 }
;; 39 succs { 4 }
;; 6 succs { 3 }
;; 31 succs { 7 }
;; 7 succs { 8 32 }
;; 8 succs { 9 40 }
;; 40 succs { 7 }
;; 9 succs { 5 }
;; 32 succs { 10 }
;; 10 succs { 11 33 }
;; 11 succs { 12 41 }
;; 41 succs { 10 }
;; 12 succs { 8 }
;; 33 succs { 13 }
;; 13 succs { 14 34 }
;; 14 succs { 15 42 }
;; 42 succs { 13 }
;; 15 succs { 11 }
;; 34 succs { 16 }
;; 16 succs { 17 35 }
;; 17 succs { 18 43 }
;; 43 succs { 16 }
;; 18 succs { 14 }
;; 35 succs { 19 }
;; 19 succs { 20 36 }
;; 20 succs { 21 44 }
;; 44 succs { 19 }
;; 21 succs { 17 }
;; 36 succs { 22 }
;; 22 succs { 23 37 }
;; 23 succs { 24 45 }
;; 45 succs { 22 }
;; 24 succs { 20 }
;; 37 succs { 25 }
;; 25 succs { 26 38 }
;; 26 succs { 27 46 }
;; 46 succs { 25 }
;; 27 succs { 23 }
;; 38 succs { 28 }
;; 28 succs { 29 47 }
;; 47 succs { 28 }
;; 29 succs { 26 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

add_acc_1 -> { add_acc_8 }
add_acc_14 -> { add_acc_38 }
add_acc_21 -> { add_acc_66 }
add_acc_155 -> { add_acc_31 }
add_acc_156 -> { add_acc_24 }
add_acc_157 -> { add_acc_17 }
add_acc_161 -> { add_acc_59 }
add_acc_162 -> { add_acc_52 }
add_acc_163 -> { add_acc_45 }
Incremental SSA update started at block: 4
Number of blocks in CFG: 48
Number of blocks to update: 35 ( 73%)



SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_28 -> { _23 }
_35 -> { _51 }
_42 -> { _158 }
_49 -> { _182 }
_167 -> { _16 }
n_168 -> { n_5(D) }
_169 -> { _3 }
_173 -> { _44 }
_174 -> { _37 }
_175 -> { _30 }
_179 -> { _152 }
_180 -> { _65 }
_181 -> { _58 }
_185 -> { _176 }
_186 -> { _170 }
_187 -> { _164 }
_192 -> { _194 }
_193 -> { _188 }
Incremental SSA update started at block: 2
Number of blocks in CFG: 48
Number of blocks to update: 36 ( 75%)



Value ranges after VRP:

add_acc_1: int [add_acc_8, add_acc_8]
_3: int [1, 2147483645]
n_5(D): int VARYING
add_acc_8: int VARYING
add_acc_14: int [add_acc_38, add_acc_38]
_16: int [1, 2147483644]
add_acc_17: int VARYING
add_acc_21: int [add_acc_66, add_acc_66]  EQUIVALENCES: { } (0 elements)
_23: int [1, 2147483643]
add_acc_24: int VARYING
_28: int [3, 2147483643]  EQUIVALENCES: { _23 } (1 elements)
_30: int [1, 2147483642]
add_acc_31: int VARYING
_35: int [3, 2147483639]  EQUIVALENCES: { _51 } (1 elements)
_37: int [1, 2147483641]
add_acc_38: int VARYING
_42: int [3, 2147483645]  EQUIVALENCES: { _158 } (1 elements)
_44: int [1, 2147483640]
add_acc_45: int VARYING
_49: int [3, 2147483641]  EQUIVALENCES: { _182 } (1 elements)
_51: int [1, 2147483639]
add_acc_52: int VARYING
_58: int [1, 2147483638]
add_acc_59: int VARYING
_64: int VARYING
_65: int [1, 2147483637]
add_acc_66: int VARYING
n_78: int [3, +INF]  EQUIVALENCES: { } (0 elements)
add_acc_80: int VARYING
n_83: int [3, 2147483646]  EQUIVALENCES: { } (0 elements)
add_acc_85: int VARYING
n_86: int [3, 2147483645]  EQUIVALENCES: { } (0 elements)
add_acc_88: int VARYING
n_89: int [3, 2147483644]  EQUIVALENCES: { } (0 elements)
add_acc_91: int VARYING
n_92: int [3, 2147483643]  EQUIVALENCES: { } (0 elements)
add_acc_94: int VARYING
n_95: int [3, 2147483642]  EQUIVALENCES: { } (0 elements)
add_acc_97: int VARYING
n_98: int [3, 2147483641]  EQUIVALENCES: { } (0 elements)
add_acc_100: int VARYING
n_101: int [3, 2147483640]  EQUIVALENCES: { } (0 elements)
add_acc_103: int VARYING
n_104: int [3, 2147483639]  EQUIVALENCES: { } (0 elements)
add_acc_106: int VARYING
_152: int [2, 2147483646]
_153: unsigned int [2, 2147483646]
_154: unsigned int [3, 2147483647]
add_acc_155: int [add_acc_31, add_acc_31]
add_acc_156: int [add_acc_24, add_acc_24]
add_acc_157: int [add_acc_17, add_acc_17]
_158: int [2, 2147483645]
_159: unsigned int [2, 2147483645]
_160: unsigned int [3, 2147483646]
add_acc_161: int [add_acc_59, add_acc_59]
add_acc_162: int [add_acc_52, add_acc_52]
add_acc_163: int [add_acc_45, add_acc_45]
_164: int [2, 2147483644]
_165: unsigned int [2, 2147483644]
_166: unsigned int [3, 2147483645]
_167: int [3, 2147483644]  EQUIVALENCES: { _16 } (1 elements)
n_168: int [3, +INF]  EQUIVALENCES: { n_5(D) } (1 elements)
_169: int [3, 2147483645]  EQUIVALENCES: { _3 } (1 elements)
_170: int [2, 2147483643]
_171: unsigned int [2, 2147483643]
_172: unsigned int [3, 2147483644]
_173: int [3, 2147483640]  EQUIVALENCES: { _44 } (1 elements)
_174: int [3, 2147483641]  EQUIVALENCES: { _37 } (1 elements)
_175: int [3, 2147483642]  EQUIVALENCES: { _30 } (1 elements)
_176: int [2, 2147483642]
_177: unsigned int [2, 2147483642]
_178: unsigned int [3, 2147483643]
_179: int [3, 2147483646]  EQUIVALENCES: { _152 } (1 elements)
_180: int [3, 2147483637]  EQUIVALENCES: { _65 } (1 elements)
_181: int [3, 2147483638]  EQUIVALENCES: { _58 } (1 elements)
_182: int [2, 2147483641]
_183: unsigned int [2, 2147483641]
_184: unsigned int [3, 2147483642]
_185: int [3, 2147483642]  EQUIVALENCES: { _176 } (1 elements)
_186: int [3, 2147483643]  EQUIVALENCES: { _170 } (1 elements)
_187: int [3, 2147483644]  EQUIVALENCES: { _164 } (1 elements)
_188: int [2, 2147483640]
_189: unsigned int [2, 2147483640]
_190: unsigned int [3, 2147483641]
_192: int [3, 2147483639]  EQUIVALENCES: { _194 } (1 elements)
_193: int [3, 2147483640]  EQUIVALENCES: { _188 } (1 elements)
_194: int [2, 2147483639]
_195: unsigned int [2, 2147483639]
_196: unsigned int [3, 2147483640]
_200: int [2, 2147483638]
_201: unsigned int [2, 2147483638]
_202: unsigned int [3, 2147483639]
_203: int [add_acc_66 + 1, add_acc_66 + 1]
prephitmp_204: int [-2147483647, +INF]
_205: int [add_acc_59 + 1, add_acc_59 + 1]
prephitmp_206: int [-2147483647, +INF]
_207: int [add_acc_52 + 1, add_acc_52 + 1]
prephitmp_208: int [-2147483647, +INF]
_209: int [add_acc_45 + 1, add_acc_45 + 1]
prephitmp_210: int [-2147483647, +INF]
_211: int [add_acc_38 + 1, add_acc_38 + 1]
prephitmp_212: int [-2147483647, +INF]
_213: int [add_acc_31 + 1, add_acc_31 + 1]
prephitmp_214: int [-2147483647, +INF]
_215: int [add_acc_24 + 1, add_acc_24 + 1]
prephitmp_216: int [-2147483647, +INF]
_217: int [add_acc_17 + 1, add_acc_17 + 1]
prephitmp_218: int [-2147483647, +INF]
_219: int [add_acc_8 + 1, add_acc_8 + 1]
prephitmp_220: int [-2147483647, +INF]


Simplified relational if (_152 <= 2)
 into if (_152 == 2)

Simplified relational if (_158 <= 2)
 into if (_158 == 2)

Simplified relational if (_164 <= 2)
 into if (_164 == 2)

Simplified relational if (_170 <= 2)
 into if (_170 == 2)

Simplified relational if (_176 <= 2)
 into if (_176 == 2)

Simplified relational if (_182 <= 2)
 into if (_182 == 2)

Simplified relational if (_188 <= 2)
 into if (_188 == 2)

Simplified relational if (_194 <= 2)
 into if (_194 == 2)

Removing basic block 30
Removing basic block 31
Removing basic block 32
Removing basic block 33
Removing basic block 34
Removing basic block 35
Removing basic block 36
Removing basic block 37
Removing basic block 38
Removing basic block 39
Removing basic block 40
Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 44
Removing basic block 45
Removing basic block 46
Removing basic block 47
int fib (int n)
{
  int D.3227;
  int n;
  int D.3225;
  int n;
  int D.3223;
  int n;
  int D.3221;
  int n;
  int D.3219;
  int n;
  int D.3217;
  int n;
  int D.3215;
  int n;
  int D.3213;
  int n;
  int add_acc_1;
  int _3;
  int add_acc_8;
  int add_acc_14;
  int _16;
  int add_acc_17;
  int add_acc_21;
  int _23;
  int add_acc_24;
  int _30;
  int add_acc_31;
  int _37;
  int add_acc_38;
  int _44;
  int add_acc_45;
  int _51;
  int add_acc_52;
  int _58;
  int add_acc_59;
  int _64;
  int _65;
  int add_acc_66;
  int add_acc_80;
  int add_acc_85;
  int add_acc_88;
  int add_acc_91;
  int add_acc_94;
  int add_acc_97;
  int add_acc_100;
  int add_acc_103;
  int add_acc_106;
  int _152;
  unsigned int _153;
  unsigned int _154;
  int add_acc_155;
  int add_acc_156;
  int add_acc_157;
  int _158;
  unsigned int _159;
  unsigned int _160;
  int add_acc_161;
  int add_acc_162;
  int add_acc_163;
  int _164;
  unsigned int _165;
  unsigned int _166;
  int _170;
  unsigned int _171;
  unsigned int _172;
  int _176;
  unsigned int _177;
  unsigned int _178;
  int _182;
  unsigned int _183;
  unsigned int _184;
  int _188;
  unsigned int _189;
  unsigned int _190;
  int _194;
  unsigned int _195;
  unsigned int _196;
  int _200;
  unsigned int _201;
  unsigned int _202;
  int _203;
  int prephitmp_204;
  int _205;
  int prephitmp_206;
  int _207;
  int prephitmp_208;
  int _209;
  int prephitmp_210;
  int _211;
  int prephitmp_212;
  int _213;
  int prephitmp_214;
  int _215;
  int prephitmp_216;
  int _217;
  int prephitmp_218;
  int _219;
  int prephitmp_220;

  <bb 2> [local count: 236223200]:
  if (n_5(D) <= 2)
    goto <bb 3>; [22.00%]
  else
    goto <bb 4>; [78.00%]

  <bb 3> [local count: 236223200]:
  # prephitmp_220 = PHI <_219(6), 1(2)>
  return prephitmp_220;

  <bb 4> [local count: 837529967]:
  # n_78 = PHI <_3(5), n_5(D)(2)>
  # add_acc_80 = PHI <add_acc_8(5), 0(2)>
  _154 = (unsigned int) n_78;
  _153 = _154 + 4294967295;
  _152 = (int) _153;
  if (_153 == 2)
    goto <bb 5>; [22.00%]
  else
    goto <bb 7>; [78.00%]

  <bb 5> [local count: 837554935]:
  # prephitmp_218 = PHI <_217(9), 1(4)>
  _3 = n_78 + -2;
  add_acc_8 = add_acc_80 + prephitmp_218;
  if (_3 <= 2)
    goto <bb 6>; [22.00%]
  else
    goto <bb 4>; [78.00%]

  <bb 6> [local count: 184262085]:
  # add_acc_1 = PHI <add_acc_8(5)>
  _219 = add_acc_1 + 1;
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 2969456207]:
  # n_83 = PHI <_16(8), _152(4)>
  # add_acc_85 = PHI <add_acc_17(8), 0(4)>
  _160 = (unsigned int) n_83;
  _159 = _160 + 4294967295;
  _158 = (int) _159;
  if (_159 == 2)
    goto <bb 8>; [22.00%]
  else
    goto <bb 10>; [78.00%]

  <bb 8> [local count: 2969456207]:
  # prephitmp_216 = PHI <_215(12), 1(7)>
  _16 = n_83 + -2;
  add_acc_17 = add_acc_85 + prephitmp_216;
  if (_16 <= 2)
    goto <bb 9>; [22.00%]
  else
    goto <bb 7>; [78.00%]

  <bb 9> [local count: 653280362]:
  # add_acc_157 = PHI <add_acc_17(8)>
  _217 = add_acc_157 + 1;
  goto <bb 5>; [100.00%]

  <bb 10> [local count: 10528074277]:
  # n_86 = PHI <_23(11), _158(7)>
  # add_acc_88 = PHI <add_acc_24(11), 0(7)>
  _166 = (unsigned int) n_86;
  _165 = _166 + 4294967295;
  _164 = (int) _165;
  if (_165 == 2)
    goto <bb 11>; [22.00%]
  else
    goto <bb 13>; [78.00%]

  <bb 11> [local count: 10528074277]:
  # prephitmp_214 = PHI <_213(15), 1(10)>
  _23 = n_86 + -2;
  add_acc_24 = add_acc_88 + prephitmp_214;
  if (_23 <= 2)
    goto <bb 12>; [22.00%]
  else
    goto <bb 10>; [78.00%]

  <bb 12> [local count: 2316176328]:
  # add_acc_156 = PHI <add_acc_24(11)>
  _215 = add_acc_156 + 1;
  goto <bb 8>; [100.00%]

  <bb 13> [local count: 37326761134]:
  # n_89 = PHI <_30(14), _164(10)>
  # add_acc_91 = PHI <add_acc_31(14), 0(10)>
  _172 = (unsigned int) n_89;
  _171 = _172 + 4294967295;
  _170 = (int) _171;
  if (_171 == 2)
    goto <bb 14>; [22.00%]
  else
    goto <bb 16>; [78.00%]

  <bb 14> [local count: 37326761134]:
  # prephitmp_212 = PHI <_211(18), 1(13)>
  _30 = n_89 + -2;
  add_acc_31 = add_acc_91 + prephitmp_212;
  if (_30 <= 2)
    goto <bb 15>; [22.00%]
  else
    goto <bb 13>; [78.00%]

  <bb 15> [local count: 8211887405]:
  # add_acc_155 = PHI <add_acc_31(14)>
  _213 = add_acc_155 + 1;
  goto <bb 11>; [100.00%]

  <bb 16> [local count: 132340346279]:
  # n_92 = PHI <_37(17), _170(13)>
  # add_acc_94 = PHI <add_acc_38(17), 0(13)>
  _178 = (unsigned int) n_92;
  _177 = _178 + 4294967295;
  _176 = (int) _177;
  if (_177 == 2)
    goto <bb 17>; [22.00%]
  else
    goto <bb 19>; [78.00%]

  <bb 17> [local count: 132340346279]:
  # prephitmp_210 = PHI <_209(21), 1(16)>
  _37 = n_92 + -2;
  add_acc_38 = add_acc_94 + prephitmp_210;
  if (_37 <= 2)
    goto <bb 18>; [22.00%]
  else
    goto <bb 16>; [78.00%]

  <bb 18> [local count: 29114876024]:
  # add_acc_14 = PHI <add_acc_38(17)>
  _211 = add_acc_14 + 1;
  goto <bb 14>; [100.00%]

  <bb 19> [local count: 469206689072]:
  # n_95 = PHI <_44(20), _176(16)>
  # add_acc_97 = PHI <add_acc_45(20), 0(16)>
  _184 = (unsigned int) n_95;
  _183 = _184 + 4294967295;
  _182 = (int) _183;
  if (_183 == 2)
    goto <bb 20>; [22.00%]
  else
    goto <bb 22>; [78.00%]

  <bb 20> [local count: 469206714040]:
  # prephitmp_208 = PHI <_207(24), 1(19)>
  _44 = n_95 + -2;
  add_acc_45 = add_acc_97 + prephitmp_208;
  if (_44 <= 2)
    goto <bb 21>; [22.00%]
  else
    goto <bb 19>; [78.00%]

  <bb 21> [local count: 103225476529]:
  # add_acc_163 = PHI <add_acc_45(20)>
  _209 = add_acc_163 + 1;
  goto <bb 17>; [100.00%]

  <bb 22> [local count: 1663551038463]:
  # n_98 = PHI <_51(23), _182(19)>
  # add_acc_100 = PHI <add_acc_52(23), 0(19)>
  _190 = (unsigned int) n_98;
  _189 = _190 + 4294967295;
  _188 = (int) _189;
  if (_189 == 2)
    goto <bb 23>; [22.00%]
  else
    goto <bb 25>; [78.00%]

  <bb 23> [local count: 1663551038463]:
  # prephitmp_206 = PHI <_205(27), 1(22)>
  _51 = n_98 + -2;
  add_acc_52 = add_acc_100 + prephitmp_206;
  if (_51 <= 2)
    goto <bb 24>; [22.00%]
  else
    goto <bb 22>; [78.00%]

  <bb 24> [local count: 365981226479]:
  # add_acc_162 = PHI <add_acc_52(23)>
  _207 = add_acc_162 + 1;
  goto <bb 20>; [100.00%]

  <bb 25> [local count: 5898044627232]:
  # n_101 = PHI <_58(26), _188(22)>
  # add_acc_103 = PHI <add_acc_59(26), 0(22)>
  _196 = (unsigned int) n_101;
  _195 = _196 + 4294967295;
  _194 = (int) _195;
  if (_195 == 2)
    goto <bb 26>; [22.00%]
  else
    goto <bb 28>; [78.00%]

  <bb 26> [local count: 5898044627232]:
  # prephitmp_204 = PHI <_203(29), 1(25)>
  _58 = n_101 + -2;
  add_acc_59 = add_acc_103 + prephitmp_204;
  if (_58 <= 2)
    goto <bb 27>; [22.00%]
  else
    goto <bb 25>; [78.00%]

  <bb 27> [local count: 1297569810960]:
  # add_acc_161 = PHI <add_acc_59(26)>
  _205 = add_acc_161 + 1;
  goto <bb 23>; [100.00%]

  <bb 28> [local count: 20911249278181]:
  # n_104 = PHI <_65(28), _194(25)>
  # add_acc_106 = PHI <add_acc_66(28), 0(25)>
  _202 = (unsigned int) n_104;
  _201 = _202 + 4294967295;
  _200 = (int) _201;
  _64 = fib (_200);
  _65 = n_104 + -2;
  add_acc_66 = _64 + add_acc_106;
  if (_65 <= 2)
    goto <bb 29>; [22.00%]
  else
    goto <bb 28>; [78.00%]

  <bb 29> [local count: 4600474816272]:
  # add_acc_21 = PHI <add_acc_66(28)>
  _203 = add_acc_21 + 1;
  goto <bb 26>; [100.00%]

}



;; Function main (main, funcdef_no=39, decl_uid=3181, cgraph_uid=40, symbol_order=39) (executed once)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after VRP:

n.0_1: int VARYING
result_5: int VARYING


int main ()
{
  int result;
  int n;
  int n.0_1;

  <bb 2> [local count: 1073741824]:
  n = 0;
  scanf ("%d", &n);
  n.0_1 = n;
  result_5 = fib (n.0_1);
  __printf_chk (1, "%d\n", result_5);
  n ={v} {CLOBBER};
  return 0;

}


